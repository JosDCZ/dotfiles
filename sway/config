### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Monitor
output eDP-1 mode 1920x1080@60Hz

# Wallpaper
output * bg /home/josue/ImÃ¡genes/Catppuccin/girl1.png fill

# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
input type:keyboard xkb_numlock enabled

input "type:touchpad" {
        dwt enabled
        tap enabled
        natural_scroll enabled
        middle_emulation enabled
}
   
input "type:keyboard" {
        xkb_layout us,latam
        xkb_options grp:rctrl_rshift_toggle
}

# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# set font
font pango:Iosevka Nerd Font 10

### Shortcuts ###

floating_modifier $mod normal

# start a terminal
bindsym $mod+Return exec foot
bindsym $mod+Shift+Return exec kitty

### Apps ###

bindsym $mod+Shift+w exec firefox
bindsym $mod+Shift+f exec thunar
bindsym $mod+Shift+e exec gsimplecal
bindsym $mod+Shift+p exec gpick
bindsym $mod+Shift+c exec qalculate-gtk
bindsym $mod+Shift+m exec kitty -e ncmpcpp

bindsym $mod+o exec wl-color-picker.sh &

# run lockscreen
bindsym $mod+l exec swaylock

# kill focused window
bindsym $mod+c kill

# run rofi programs
bindsym $mod+d exec ~/.config/rofi/launchers/type-2/launcher.sh &
bindsym $mod+x exec ~/.config/rofi/applets/bin/powermenu.sh &
bindsym $mod+m exec ~/.config/rofi/applets/bin/apps.sh
bindsym $mod+z exec ~/.config/rofi/applets/bin/appasroot.sh

bindsym $mod+a exec clipman pick --tool="STDOUT" --max-items=30 --histpath="~/.local/share/clipman.json" | rofi -dmenu -theme /home/josue/.config/rofi/applets/shared/clipmenu.rasi -p 'Portapapeles' | wl-copy

# Reload the configuration file
bindsym $mod+Shift+x reload

#
# Moving around:
#
# change focus
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
#
# Workspaces:
#
# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
#
# Layout stuff:
#
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+q focus parent

# sticky windows
bindsym $mod+Shift+s exec swaymsg '[con_id="__focused__"]' sticky toggle
#
# Scratchpad:
#
# Move the currently focused window to the scratchpad
bindsym $mod+Shift+9 move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+9 scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}
bindsym $mod+r mode "resize"

#border width
default_border pixel 2
default_floating_border pixel 2
title_align center

#border colors
# target                 title     bg    text   indicator  border
client.focused  #ca9ee6 #ca9ee6 #303446 #ca9ee6 #ca9ee6
client.focused_inactive #8caaee #8caaee #ca9ee6 #8caaee #8caaee
client.unfocused #51576d #51576d #ca9ee6 #51576d #51576d
client.urgent #e78284 #e78284 #303446 #e78284 #e78284

gaps inner 10
gaps outer 0

# Smart gaps (gaps used if only more than one container on the workspace)
# smart_gaps on
# smart_borders on

# Incrementar los gaps en el escritorio actual
bindsym $mod+Shift+plus gaps all current plus 5
bindsym $mod+plus gaps inner current plus 5

# Disminuir los gaps en el escritorio actual
bindsym $mod+Shift+minus gaps inner all minus 5
bindsym $mod+minus gaps inner current minus 5

bindsym $mod+Shift+0 gaps inner all set 10
bindsym $mod+0 gaps inner current set 10

set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+g mode "$mode_gaps"


mode "$mode_gaps" {
        bindsym $mod+o      mode "$mode_gaps_outer"
        bindsym $mod+i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym $mod+plus  gaps inner current plus 5
        bindsym $mod+minus gaps inner current minus 5
        bindsym $mod+0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym $mod+plus  gaps outer current plus 5
        bindsym $mod+minus gaps outer current minus 5
        bindsym $mod+0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

###########################################################################################

# Include configs from 3 locations:
#  - /usr/share/sway/config.d
#  - /etc/sway/config.d
#  - $XDG_CONFIG_HOME/sway/config.d ($HOME/.config/sway/config.d)
#
# If multiple directories contain the files with the same name, the later
# directory takes precedence; `$XDG_CONFIG_HOME/sway/config.d/20-swayidle.conf`
# will always be loaded instead of `/usr/share/sway/config.d/20-swayidle.conf`
# or `/etc/sway/config.d/20-swayidle.conf`
#
# This mechanism permits overriding our default configuration per-system
# (/etc) or per-user ($XDG_CONFIG_HOME) basis. Just create the file you
# want to modify/override in the higher-level directory.
#
# For example, to disable the default bar from Fedora configs, you'll need to
#     $ echo -n > "$HOME/.config/sway/config.d/90-bar.conf"
#
# Note the quoting, the $() and the arguments quoting. All the parts are equally
# important to make the magic work. And if you want to learn the secret behind
# the trick, it's all in the `wordexp(3)`.
#
include '$(/usr/libexec/sway/layered-include "${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/*.conf")'
